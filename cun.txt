#include <assert.h>　　　　//设定插入点
#include <ctype.h>　　　　 //字符处理
#include <errno.h>　　　　 //定义错误码
#include <float.h>　　　　 //浮点数处理
#include <iso646.h>        //对应各种运算符的宏
#include <limits.h>　　　　//定义各种数据类型最值的常量
#include <locale.h>　　　　//定义本地化C函数
#include <math.h>　　　　　//定义数学函数
#include <setjmp.h>        //异常处理支持
#include <signal.h>        //信号机制支持
#include <stdarg.h>        //不定参数列表支持
#include <stddef.h>        //常用常量
#include <stdio.h>　　　　 //定义输入／输出函数
#include <stdlib.h>　　　　//定义杂项函数及内存分配函数
#include <string.h>　　　　//字符串处理
#include <time.h>　　　　　//定义关于时间的函数
#include <wchar.h>　　　　 //宽字符处理及输入／输出
#include <wctype.h>　　　　//宽字符分类
#include <gtk/gtk.h>       // gtk
//#include "database.h"


/**********************************


**********************************/ 

 
int main(int argc , char **argv)
{
    gtk_init (&argc, &argv);   //所有 GTK应用程序都要调用该函数，而且必须在控件定义之前使用，它为我们设置一些缺省值( 例如视觉和颜色 )映射这个函数将函数库初始化，设置缺省的信号处理函数，并检查通过命令行传递给应用程序的参数，自动完成一些必要的初始化工作。 
    printf("1");
 //   init(); 
    printf("2");
    /***************
    导入galde文件，获得格式 
    ***************/
    GtkBuilder *main_builder = gtk_builder_new();	
	if(!gtk_builder_add_from_file(main_builder,"Main_Framework.glade",NULL)){
		printf("Cannot load file!");
	} 
    printf("haha"); 
    /***************
    获取主界面控件，设置主界面有关参数 
    ***************/
    GtkWidget *window = GTK_WIDGET(gtk_builder_get_object(main_builder,"main_window"));   
    gtk_window_set_title(GTK_WINDOW(window), "WuHanSubway");
 	g_signal_connect(window,"destroy",G_CALLBACK(gtk_main_quit),NULL);
	gtk_window_set_position(GTK_WINDOW(window),GTK_WIN_POS_CENTER);
	gtk_widget_set_size_request(window,400,300);
	gtk_window_set_resizable(GTK_WINDOW(window),FALSE); 
 
 //	GtkWidget *table = gtk_table_new(2,2,TRUE);
 //	gtk_container_add(GTK_CONTAINER(window),table);
 
    gtk_widget_show_all(window);
    gtk_main();//是在每个Gtk应用程序都要调用的函数。程序运行停在这里等待事件(如键盘事件或鼠标事件)的发生，等待用户来操作窗口。
	return 0;
}


